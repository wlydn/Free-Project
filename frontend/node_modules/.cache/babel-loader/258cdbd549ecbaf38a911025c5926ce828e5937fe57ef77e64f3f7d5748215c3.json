{"ast":null,"code":"var _jsxFileName = \"D:\\\\WE\\\\frontend\\\\src\\\\components\\\\SubDirectoryPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getSubDirectories, uploadFile } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SubDirectoryPanel({\n  folderId\n}) {\n  _s();\n  const [subDirectories, setSubDirectories] = useState([]);\n  const [file, setFile] = useState(null);\n  const [newFolderName, setNewFolderName] = useState(\"\");\n  const BASE_URL = 'http://localhost:4000/api';\n  useEffect(() => {\n    if (folderId) {\n      getSubDirectories(folderId).then(data => {\n        setSubDirectories(data);\n      }).catch(err => {\n        console.error(\"Error fetching subdirectories:\", err.message);\n      });\n    }\n  }, [folderId]);\n  const handleUploadFile = async () => {\n    if (!file) return alert(\"Please select a file\");\n    try {\n      await uploadFile(file, folderId);\n      alert(\"File uploaded successfully\");\n      setFile(null);\n    } catch (err) {\n      console.error(\"Error uploading file:\", err.message);\n    }\n  };\n  const handleCreateFolder = async () => {\n    if (!newFolderName.trim()) return alert('Folder name is required');\n    try {\n      const folder = await createFolder(newFolderName, folderId);\n      setSubDirectories([...subDirectories, folder]);\n      setNewFolderName(\"\");\n    } catch (err) {\n      console.error(\"Error creating folder:\", err.message);\n    }\n  };\n  const createFolder = async (name, parent_id = null) => {\n    const response = await fetch(`${BASE_URL}/create-sub-directory`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        parent_id\n      })\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to create folder\");\n    }\n    return response.json();\n  };\n  if (!folderId) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please select a folder to view its subdirectories.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Subdirectories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: subDirectories.map(subDir => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: subDir.name\n      }, subDir.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newFolderName,\n        onChange: e => setNewFolderName(e.target.value),\n        placeholder: \"New folder name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateFolder,\n        children: \"Create Folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Upload File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setFile(e.target.files ? e.target.files[0] : null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUploadFile,\n        children: \"Upload File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(SubDirectoryPanel, \"5x8pY2dL3iCf7U+X+TMfYfjN1k4=\");\n_c = SubDirectoryPanel;\nexport default SubDirectoryPanel;\nvar _c;\n$RefreshReg$(_c, \"SubDirectoryPanel\");","map":{"version":3,"names":["React","useEffect","useState","getSubDirectories","uploadFile","jsxDEV","_jsxDEV","SubDirectoryPanel","folderId","_s","subDirectories","setSubDirectories","file","setFile","newFolderName","setNewFolderName","BASE_URL","then","data","catch","err","console","error","message","handleUploadFile","alert","handleCreateFolder","trim","folder","createFolder","name","parent_id","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","children","fileName","_jsxFileName","lineNumber","columnNumber","map","subDir","id","type","value","onChange","e","target","placeholder","onClick","files","_c","$RefreshReg$"],"sources":["D:/WE/frontend/src/components/SubDirectoryPanel.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getSubDirectories, uploadFile } from \"../services/api\";\r\n\r\nfunction SubDirectoryPanel({ folderId }) {\r\n  const [subDirectories, setSubDirectories] = useState([]);\r\n  const [file, setFile] = useState(null);\r\n  const [newFolderName, setNewFolderName] = useState(\"\");\r\n  const BASE_URL = 'http://localhost:4000/api';\r\n\r\n  useEffect(() => {\r\n    if (folderId) {\r\n      getSubDirectories(folderId).then((data) => {\r\n        setSubDirectories(data);\r\n      }).catch((err) => {\r\n        console.error(\"Error fetching subdirectories:\", err.message);\r\n      });\r\n    }\r\n  }, [folderId]);\r\n\r\n  const handleUploadFile = async () => {\r\n    if (!file) return alert(\"Please select a file\");\r\n    try {\r\n      await uploadFile(file, folderId);\r\n      alert(\"File uploaded successfully\");\r\n      setFile(null);\r\n    } catch (err) {\r\n      console.error(\"Error uploading file:\", err.message);\r\n    }\r\n  };\r\n\r\n  const handleCreateFolder = async () => {  \r\n    if (!newFolderName.trim()) return alert('Folder name is required');\r\n    try {\r\n      const folder = await createFolder(newFolderName, folderId);\r\n      setSubDirectories([...subDirectories, folder]);\r\n      setNewFolderName(\"\");\r\n    } catch (err) {\r\n      console.error(\"Error creating folder:\", err.message);\r\n    }\r\n  };\r\n\r\n  const createFolder = async (name, parent_id = null) => {\r\n    const response = await fetch(`${BASE_URL}/create-sub-directory`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ name, parent_id }),\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(\"Failed to create folder\");\r\n    }\r\n    return response.json();\r\n  }\r\n\r\n  if (!folderId) {\r\n    return <p>Please select a folder to view its subdirectories.</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>Subdirectories</h3>\r\n      <ul>\r\n        {subDirectories.map((subDir) => (\r\n          <li key={subDir.id}>{subDir.name}</li>\r\n        ))}\r\n      </ul>\r\n      <div><input\r\n          type=\"text\"\r\n          value={newFolderName}\r\n          onChange={(e) => setNewFolderName(e.target.value)}\r\n          placeholder=\"New folder name\"\r\n        />\r\n        <button onClick={handleCreateFolder}>Create Folder</button>\r\n      </div>\r\n      <h3>Upload File</h3>\r\n      <div>\r\n        <input type=\"file\" onChange={(e) => setFile(e.target.files ? e.target.files[0] : null)} />\r\n        <button onClick={handleUploadFile}>Upload File</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SubDirectoryPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}