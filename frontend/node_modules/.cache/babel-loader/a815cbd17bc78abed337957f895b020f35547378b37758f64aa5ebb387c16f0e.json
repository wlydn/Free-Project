{"ast":null,"code":"var _jsxFileName = \"D:\\\\WE\\\\frontend\\\\src\\\\components\\\\SubDirectoryPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getSubDirectories, uploadFile } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SubDirectoryPanel({\n  folderId\n}) {\n  _s();\n  const [subDirectories, setSubDirectories] = useState([]);\n  const [file, setFile] = useState(null);\n  console.log(\"folderId\", folderId);\n  useEffect(() => {\n    if (folderId) {\n      getSubDirectories(folderId).then(data => {\n        console.log(data);\n        setSubDirectories(data);\n      });\n    }\n  }, [folderId]);\n  const handleUploadFile = async () => {\n    if (!file) return alert(\"Please select a file\");\n    await uploadFile(file, folderId);\n    alert(\"File uploaded successfully\");\n    setFile(null);\n  };\n  if (!folderId) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please select a folder to view its subdirectories.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Subdirectories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: subDirectories.map(subDir => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: subDir.name\n      }, subDir.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newFolderName,\n        onChange: e => setNewFolderName(e.target.value),\n        placeholder: \"New folder name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateFolder,\n        children: \"Create Folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUploadFile,\n        children: \"Upload File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(SubDirectoryPanel, \"31C+iY6QoYd/MpxEh5ziTbi5BbM=\");\n_c = SubDirectoryPanel;\nexport default SubDirectoryPanel;\nvar _c;\n$RefreshReg$(_c, \"SubDirectoryPanel\");","map":{"version":3,"names":["React","useEffect","useState","getSubDirectories","uploadFile","jsxDEV","_jsxDEV","SubDirectoryPanel","folderId","_s","subDirectories","setSubDirectories","file","setFile","console","log","then","data","handleUploadFile","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","map","subDir","name","id","type","value","newFolderName","onChange","e","setNewFolderName","target","placeholder","onClick","handleCreateFolder","files","_c","$RefreshReg$"],"sources":["D:/WE/frontend/src/components/SubDirectoryPanel.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getSubDirectories, uploadFile } from \"../services/api\";\r\n\r\nfunction SubDirectoryPanel({ folderId }) {\r\n  const [subDirectories, setSubDirectories] = useState([]);\r\n  const [file, setFile] = useState(null);\r\n  console.log(\"folderId\", folderId);\r\n\r\n  useEffect(() => {\r\n    if (folderId) {\r\n      getSubDirectories(folderId).then((data) => {\r\n        console.log(data);\r\n        setSubDirectories(data);\r\n      });\r\n    }\r\n  }, [folderId]);\r\n\r\n  const handleUploadFile = async () => {\r\n    if (!file) return alert(\"Please select a file\");\r\n    await uploadFile(file, folderId);\r\n    alert(\"File uploaded successfully\");\r\n    setFile(null);\r\n  };\r\n  \r\n\r\n  if (!folderId) {\r\n    return <p>Please select a folder to view its subdirectories.</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>Subdirectories</h3>\r\n      <ul>\r\n        {subDirectories.map((subDir) => (\r\n          <li key={subDir.id}>{subDir.name}</li>\r\n        ))}\r\n      </ul>\r\n      <div><input\r\n          type=\"text\"\r\n          value={newFolderName}\r\n          onChange={(e) => setNewFolderName(e.target.value)}\r\n          placeholder=\"New folder name\"\r\n        />\r\n        <button onClick={handleCreateFolder}>Create Folder</button>\r\n        <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\r\n        <button onClick={handleUploadFile}>Upload File</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SubDirectoryPanel;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,iBAAiB,EAAEC,UAAU,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,SAASC,iBAAiBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtCY,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEP,QAAQ,CAAC;EAEjCP,SAAS,CAAC,MAAM;IACd,IAAIO,QAAQ,EAAE;MACZL,iBAAiB,CAACK,QAAQ,CAAC,CAACQ,IAAI,CAAEC,IAAI,IAAK;QACzCH,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;QACjBN,iBAAiB,CAACM,IAAI,CAAC;MACzB,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACT,QAAQ,CAAC,CAAC;EAEd,MAAMU,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI,CAACN,IAAI,EAAE,OAAOO,KAAK,CAAC,sBAAsB,CAAC;IAC/C,MAAMf,UAAU,CAACQ,IAAI,EAAEJ,QAAQ,CAAC;IAChCW,KAAK,CAAC,4BAA4B,CAAC;IACnCN,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAGD,IAAI,CAACL,QAAQ,EAAE;IACb,oBAAOF,OAAA;MAAAc,QAAA,EAAG;IAAkD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAClE;EAEA,oBACElB,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBlB,OAAA;MAAAc,QAAA,EACGV,cAAc,CAACe,GAAG,CAAEC,MAAM,iBACzBpB,OAAA;QAAAc,QAAA,EAAqBM,MAAM,CAACC;MAAI,GAAvBD,MAAM,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLlB,OAAA;MAAAc,QAAA,gBAAKd,OAAA;QACDuB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEC,aAAc;QACrBC,QAAQ,EAAGC,CAAC,IAAKC,gBAAgB,CAACD,CAAC,CAACE,MAAM,CAACL,KAAK,CAAE;QAClDM,WAAW,EAAC;MAAiB;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eACFlB,OAAA;QAAQ+B,OAAO,EAAEC,kBAAmB;QAAAlB,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC3DlB,OAAA;QAAOuB,IAAI,EAAC,MAAM;QAACG,QAAQ,EAAGC,CAAC,IAAKpB,OAAO,CAACoB,CAAC,CAACE,MAAM,CAACI,KAAK,CAAC,CAAC,CAAC;MAAE;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClElB,OAAA;QAAQ+B,OAAO,EAAEnB,gBAAiB;QAAAE,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACf,EAAA,CA9CQF,iBAAiB;AAAAiC,EAAA,GAAjBjC,iBAAiB;AAgD1B,eAAeA,iBAAiB;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}