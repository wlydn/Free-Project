{"ast":null,"code":"var _jsxFileName = \"D:\\\\WE\\\\frontend\\\\src\\\\components\\\\SubDirectoryPanel.js\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getSubDirectories, uploadFile } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SubDirectoryPanel({\n  folderId\n}) {\n  _s2();\n  var _s = $RefreshSig$();\n  const [subDirectories, setSubDirectories] = useState([]);\n  const [file, setFile] = useState(null);\n  console.log(\"folderId\", folderId);\n  useEffect(() => {\n    if (folderId) {\n      getSubDirectories(folderId).then(data => {\n        console.log(data);\n        setSubDirectories(data);\n      });\n    }\n  }, [folderId]);\n  const handleUploadFile = async () => {\n    if (!file) return alert(\"Please select a file\");\n    await uploadFile(file, folderId);\n    alert(\"File uploaded successfully\");\n    setFile(null);\n  };\n  function FolderPanel({\n    onSelectFolder\n  }) {\n    _s();\n    const [folders, setFolders] = useState([]);\n    const [newFolderName, setNewFolderName] = useState('');\n    useEffect(() => {\n      getFolders().then(data => setFolders(data));\n    }, []);\n    const handleCreateFolder = async () => {\n      if (!newFolderName.trim()) return alert('Folder name is required');\n      const folder = await createFolder(newFolderName);\n      setFolders([...folders, folder]);\n      setNewFolderName('');\n    };\n    if (!folderId) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please select a folder to view its subdirectories.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 12\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Subdirectories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: subDirectories.map(subDir => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: subDir.name\n        }, subDir.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newFolderName,\n          onChange: e => setNewFolderName(e.target.value),\n          placeholder: \"New folder name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCreateFolder,\n          children: \"Create Folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => setFile(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUploadFile,\n          children: \"Upload File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this);\n  }\n  _s(FolderPanel, \"YSxXLObiDhF5DGH/SaKtlSnpw3k=\");\n}\n_s2(SubDirectoryPanel, \"31C+iY6QoYd/MpxEh5ziTbi5BbM=\");\n_c = SubDirectoryPanel;\nexport default SubDirectoryPanel;\nvar _c;\n$RefreshReg$(_c, \"SubDirectoryPanel\");","map":{"version":3,"names":["React","useEffect","useState","getSubDirectories","uploadFile","jsxDEV","_jsxDEV","SubDirectoryPanel","folderId","_s2","_s","$RefreshSig$","subDirectories","setSubDirectories","file","setFile","console","log","then","data","handleUploadFile","alert","FolderPanel","onSelectFolder","folders","setFolders","newFolderName","setNewFolderName","getFolders","handleCreateFolder","trim","folder","createFolder","children","fileName","_jsxFileName","lineNumber","columnNumber","map","subDir","name","id","type","value","onChange","e","target","placeholder","onClick","files","_c","$RefreshReg$"],"sources":["D:/WE/frontend/src/components/SubDirectoryPanel.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getSubDirectories, uploadFile } from \"../services/api\";\r\n\r\nfunction SubDirectoryPanel({ folderId }) {\r\n  const [subDirectories, setSubDirectories] = useState([]);\r\n  const [file, setFile] = useState(null);\r\n  console.log(\"folderId\", folderId);\r\n\r\n  useEffect(() => {\r\n    if (folderId) {\r\n      getSubDirectories(folderId).then((data) => {\r\n        console.log(data);\r\n        setSubDirectories(data);\r\n      });\r\n    }\r\n  }, [folderId]);\r\n\r\n  const handleUploadFile = async () => {\r\n    if (!file) return alert(\"Please select a file\");\r\n    await uploadFile(file, folderId);\r\n    alert(\"File uploaded successfully\");\r\n    setFile(null);\r\n  };\r\n\r\n  function FolderPanel({ onSelectFolder }) {\r\n    const [folders, setFolders] = useState([]);\r\n    const [newFolderName, setNewFolderName] = useState('');\r\n  \r\n    useEffect(() => {\r\n      getFolders().then((data) => setFolders(data));\r\n    }, []);\r\n  \r\n    const handleCreateFolder = async () => {\r\n      if (!newFolderName.trim()) return alert('Folder name is required');\r\n      const folder = await createFolder(newFolderName);\r\n      setFolders([...folders, folder]);\r\n      setNewFolderName('');\r\n    };\r\n\r\n  if (!folderId) {\r\n    return <p>Please select a folder to view its subdirectories.</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>Subdirectories</h3>\r\n      <ul>\r\n        {subDirectories.map((subDir) => (\r\n          <li key={subDir.id}>{subDir.name}</li>\r\n        ))}\r\n      </ul>\r\n      <div><input\r\n          type=\"text\"\r\n          value={newFolderName}\r\n          onChange={(e) => setNewFolderName(e.target.value)}\r\n          placeholder=\"New folder name\"\r\n        />\r\n        <button onClick={handleCreateFolder}>Create Folder</button>\r\n        <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\r\n        <button onClick={handleUploadFile}>Upload File</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default SubDirectoryPanel;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,iBAAiB,EAAEC,UAAU,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,SAASC,iBAAiBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACvC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtCc,OAAO,CAACC,GAAG,CAAC,UAAU,EAAET,QAAQ,CAAC;EAEjCP,SAAS,CAAC,MAAM;IACd,IAAIO,QAAQ,EAAE;MACZL,iBAAiB,CAACK,QAAQ,CAAC,CAACU,IAAI,CAAEC,IAAI,IAAK;QACzCH,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;QACjBN,iBAAiB,CAACM,IAAI,CAAC;MACzB,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACX,QAAQ,CAAC,CAAC;EAEd,MAAMY,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI,CAACN,IAAI,EAAE,OAAOO,KAAK,CAAC,sBAAsB,CAAC;IAC/C,MAAMjB,UAAU,CAACU,IAAI,EAAEN,QAAQ,CAAC;IAChCa,KAAK,CAAC,4BAA4B,CAAC;IACnCN,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,SAASO,WAAWA,CAAC;IAAEC;EAAe,CAAC,EAAE;IAAAb,EAAA;IACvC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;IAC1C,MAAM,CAACwB,aAAa,EAAEC,gBAAgB,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;IAEtDD,SAAS,CAAC,MAAM;MACd2B,UAAU,CAAC,CAAC,CAACV,IAAI,CAAEC,IAAI,IAAKM,UAAU,CAACN,IAAI,CAAC,CAAC;IAC/C,CAAC,EAAE,EAAE,CAAC;IAEN,MAAMU,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI,CAACH,aAAa,CAACI,IAAI,CAAC,CAAC,EAAE,OAAOT,KAAK,CAAC,yBAAyB,CAAC;MAClE,MAAMU,MAAM,GAAG,MAAMC,YAAY,CAACN,aAAa,CAAC;MAChDD,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAEO,MAAM,CAAC,CAAC;MAChCJ,gBAAgB,CAAC,EAAE,CAAC;IACtB,CAAC;IAEH,IAAI,CAACnB,QAAQ,EAAE;MACb,oBAAOF,OAAA;QAAA2B,QAAA,EAAG;MAAkD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAClE;IAEA,oBACE/B,OAAA;MAAA2B,QAAA,gBACE3B,OAAA;QAAA2B,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvB/B,OAAA;QAAA2B,QAAA,EACGrB,cAAc,CAAC0B,GAAG,CAAEC,MAAM,iBACzBjC,OAAA;UAAA2B,QAAA,EAAqBM,MAAM,CAACC;QAAI,GAAvBD,MAAM,CAACE,EAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB,CACtC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACL/B,OAAA;QAAA2B,QAAA,gBAAK3B,OAAA;UACDoC,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEjB,aAAc;UACrBkB,QAAQ,EAAGC,CAAC,IAAKlB,gBAAgB,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAClDI,WAAW,EAAC;QAAiB;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC,eACF/B,OAAA;UAAQ0C,OAAO,EAAEnB,kBAAmB;UAAAI,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC3D/B,OAAA;UAAOoC,IAAI,EAAC,MAAM;UAACE,QAAQ,EAAGC,CAAC,IAAK9B,OAAO,CAAC8B,CAAC,CAACC,MAAM,CAACG,KAAK,CAAC,CAAC,CAAC;QAAE;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAClE/B,OAAA;UAAQ0C,OAAO,EAAE5B,gBAAiB;UAAAa,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAAC3B,EAAA,CAvCUY,WAAW;AAwCtB;AAACb,GAAA,CA7DQF,iBAAiB;AAAA2C,EAAA,GAAjB3C,iBAAiB;AA+D1B,eAAeA,iBAAiB;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}