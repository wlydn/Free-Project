{"ast":null,"code":"var _jsxFileName = \"D:\\\\WE\\\\frontend\\\\src\\\\components\\\\FolderPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getSubDirectories, createFolder } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FolderPanel({\n  folderId,\n  onSelectFolder\n}) {\n  _s();\n  const [items, setItems] = useState([]);\n  const [newFolderName, setNewFolderName] = useState(\"\");\n  const [folders, setFolders] = useState([]);\n  useEffect(() => {\n    getFolders().then(data => setFolders(data));\n  }, []);\n  useEffect(() => {\n    if (folderId) {\n      getSubDirectories(folderId).then(setItems);\n    }\n  }, [folderId]);\n  const handleCreateFolder = async () => {\n    if (!newFolderName.trim()) return alert(\"Folder name is required\");\n    const folder = await createFolder(newFolderName, folderId);\n    setItems([...items, {\n      ...folder,\n      type: \"folder\"\n    }]);\n    setNewFolderName(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Contents\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item.type === \"folder\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onSelectFolder(item.id),\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newFolderName,\n        onChange: e => setNewFolderName(e.target.value),\n        placeholder: \"New folder name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateFolder,\n        children: \"Create Folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(FolderPanel, \"nfFSE9/vlZlqViIa4CiNLsCq5Fs=\");\n_c = FolderPanel;\nexport default FolderPanel;\nvar _c;\n$RefreshReg$(_c, \"FolderPanel\");","map":{"version":3,"names":["React","useEffect","useState","getSubDirectories","createFolder","jsxDEV","_jsxDEV","FolderPanel","folderId","onSelectFolder","_s","items","setItems","newFolderName","setNewFolderName","folders","setFolders","getFolders","then","data","handleCreateFolder","trim","alert","folder","type","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","onClick","id","name","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["D:/WE/frontend/src/components/FolderPanel.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getSubDirectories, createFolder } from \"../services/api\";\r\n\r\nfunction FolderPanel({ folderId, onSelectFolder }) {\r\n  const [items, setItems] = useState([]);\r\n  const [newFolderName, setNewFolderName] = useState(\"\");\r\n  const [folders, setFolders] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getFolders().then((data) => setFolders(data));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (folderId) {\r\n      getSubDirectories(folderId).then(setItems);\r\n    }\r\n  }, [folderId]);\r\n\r\n  const handleCreateFolder = async () => {\r\n    if (!newFolderName.trim()) return alert(\"Folder name is required\");\r\n    const folder = await createFolder(newFolderName, folderId);\r\n    setItems([...items, { ...folder, type: \"folder\" }]);\r\n    setNewFolderName(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Contents</h3>\r\n      <ul>\r\n        {items.map((item) => (\r\n          <li key={item.id}>\r\n            {item.type === \"folder\" ? (\r\n              <button onClick={() => onSelectFolder(item.id)}>{item.name}</button>\r\n            ) : (\r\n              <span>{item.name}</span>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={newFolderName}\r\n          onChange={(e) => setNewFolderName(e.target.value)}\r\n          placeholder=\"New folder name\"\r\n        />\r\n        <button onClick={handleCreateFolder}>Create Folder</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FolderPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}