{"ast":null,"code":"const BASE_URL = 'http://localhost:4000/api';\nexport const getFolders = async () => {\n  const response = await fetch(`${BASE_URL}/folders`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch folders');\n  }\n  return response.json();\n};\nexport const getSubDirectories = async folderId => {\n  const response = await fetch(`${BASE_URL}/sub-directories/${folderId}`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch subdirectories');\n  }\n  return response.json();\n};","map":{"version":3,"names":["BASE_URL","getFolders","response","fetch","ok","Error","json","getSubDirectories","folderId"],"sources":["D:/WE/frontend/src/services/api.js"],"sourcesContent":["const BASE_URL = 'http://localhost:4000/api';\r\n\r\nexport const getFolders = async () => {\r\n  const response = await fetch(`${BASE_URL}/folders`);\r\n  if (!response.ok) {\r\n    throw new Error('Failed to fetch folders');\r\n  }\r\n  return response.json();\r\n};\r\n\r\nexport const getSubDirectories = async (folderId) => {\r\n  const response = await fetch(`${BASE_URL}/sub-directories/${folderId}`);\r\n  if (!response.ok) {\r\n    throw new Error('Failed to fetch subdirectories');\r\n  }\r\n  return response.json();\r\n};"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,2BAA2B;AAE5C,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,UAAU,CAAC;EACnD,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,QAAQ,IAAK;EACnD,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,oBAAoBQ,QAAQ,EAAE,CAAC;EACvE,IAAI,CAACN,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;EACnD;EACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}