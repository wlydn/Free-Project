{"ast":null,"code":"const BASE_URL = 'http://localhost:4000/api';\nexport const getFolders = async () => {\n  const response = await fetch(`${BASE_URL}/folders`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch folders');\n  }\n  return response.json();\n};\nexport const getSubDirectories = async folderId => {\n  const response = await fetch(`${BASE_URL}/sub-directories/${folderId}`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch subdirectories');\n  }\n  return response.json();\n};\nexport const createFolder = async (name, parent_id = null) => {\n  const response = await fetch(`${BASE_URL}/create-folder`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      parent_id\n    })\n  });\n  if (!response.ok) {\n    throw new Error('Failed to create folder');\n  }\n  return response.json();\n};\nexport const uploadFile = async (file, folder_id = null) => {\n  const formData = new FormData();\n  formData.append('file', file);\n  formData.append('folder_id', folder_id);\n  const response = await fetch(`${BASE_URL}/upload-file`, {\n    method: 'POST',\n    body: formData\n  });\n  if (!response.ok) {\n    throw new Error('Failed to upload file');\n  }\n  return response.json();\n};","map":{"version":3,"names":["BASE_URL","getFolders","response","fetch","ok","Error","json","getSubDirectories","folderId","createFolder","name","parent_id","method","headers","body","JSON","stringify","uploadFile","file","folder_id","formData","FormData","append"],"sources":["E:/wali/File-Explorer/frontend/src/services/api.js"],"sourcesContent":["const BASE_URL = 'http://localhost:4000/api';\r\n\r\nexport const getFolders = async () => {\r\n  const response = await fetch(`${BASE_URL}/folders`);\r\n  if (!response.ok) {\r\n    throw new Error('Failed to fetch folders');\r\n  }\r\n  return response.json();\r\n};\r\n\r\nexport const getSubDirectories = async (folderId) => {\r\n  const response = await fetch(`${BASE_URL}/sub-directories/${folderId}`);\r\n  if (!response.ok) {\r\n    throw new Error('Failed to fetch subdirectories');\r\n  }\r\n  return response.json();\r\n};\r\n\r\nexport const createFolder = async (name, parent_id = null) => {\r\n  const response = await fetch(`${BASE_URL}/create-folder`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ name, parent_id }),\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error('Failed to create folder');\r\n  }\r\n  return response.json();\r\n};\r\n\r\nexport const uploadFile = async (file, folder_id = null) => {\r\n  const formData = new FormData();\r\n  formData.append('file', file);\r\n  formData.append('folder_id', folder_id);\r\n\r\n  const response = await fetch(`${BASE_URL}/upload-file`, {\r\n    method: 'POST',\r\n    body: formData,\r\n  });\r\n  if (!response.ok) {\r\n    throw new Error('Failed to upload file');\r\n  }\r\n  return response.json();\r\n};"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,2BAA2B;AAE5C,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,UAAU,CAAC;EACnD,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,QAAQ,IAAK;EACnD,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,oBAAoBQ,QAAQ,EAAE,CAAC;EACvE,IAAI,CAACN,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;EACnD;EACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMG,YAAY,GAAG,MAAAA,CAAOC,IAAI,EAAEC,SAAS,GAAG,IAAI,KAAK;EAC5D,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,gBAAgB,EAAE;IACxDY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEN,IAAI;MAAEC;IAAU,CAAC;EAC1C,CAAC,CAAC;EACF,IAAI,CAACT,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMW,UAAU,GAAG,MAAAA,CAAOC,IAAI,EAAEC,SAAS,GAAG,IAAI,KAAK;EAC1D,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEJ,IAAI,CAAC;EAC7BE,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEH,SAAS,CAAC;EAEvC,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,cAAc,EAAE;IACtDY,MAAM,EAAE,MAAM;IACdE,IAAI,EAAEM;EACR,CAAC,CAAC;EACF,IAAI,CAAClB,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1C;EACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}