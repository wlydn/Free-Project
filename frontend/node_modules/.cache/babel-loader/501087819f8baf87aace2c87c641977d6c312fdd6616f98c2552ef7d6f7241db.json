{"ast":null,"code":"var _jsxFileName = \"D:\\\\WE\\\\frontend\\\\src\\\\components\\\\FolderPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getFolders, createFolder } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FolderPanel({\n  onSelectFolder\n}) {\n  _s();\n  const [folders, setFolders] = useState([]);\n  const [newFolderName, setNewFolderName] = useState('');\n  useEffect(() => {\n    getFolders().then(data => setFolders(data));\n  }, []);\n  const handleCreateFolder = async () => {\n    if (!newFolderName.trim()) return alert('Folder name is required');\n    const folder = await createFolder(newFolderName);\n    setFolders([...folders, folder]);\n    setNewFolderName('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Folders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: folders.map(folder => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onSelectFolder(folder.id),\n          children: folder.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)\n      }, folder.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newFolderName,\n        onChange: e => setNewFolderName(e.target.value),\n        placeholder: \"New folder name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateFolder,\n        children: \"Create Folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(FolderPanel, \"YSxXLObiDhF5DGH/SaKtlSnpw3k=\");\n_c = FolderPanel;\nexport default FolderPanel;\nvar _c;\n$RefreshReg$(_c, \"FolderPanel\");","map":{"version":3,"names":["React","useEffect","useState","getFolders","createFolder","jsxDEV","_jsxDEV","FolderPanel","onSelectFolder","_s","folders","setFolders","newFolderName","setNewFolderName","then","data","handleCreateFolder","trim","alert","folder","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","id","name","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["D:/WE/frontend/src/components/FolderPanel.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getFolders, createFolder } from '../services/api';\r\n\r\nfunction FolderPanel({ onSelectFolder }) {\r\n  const [folders, setFolders] = useState([]);\r\n  const [newFolderName, setNewFolderName] = useState('');\r\n\r\n  useEffect(() => {\r\n    getFolders().then((data) => setFolders(data));\r\n  }, []);\r\n\r\n  const handleCreateFolder = async () => {\r\n    if (!newFolderName.trim()) return alert('Folder name is required');\r\n    const folder = await createFolder(newFolderName);\r\n    setFolders([...folders, folder]);\r\n    setNewFolderName('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Folders</h3>\r\n      <ul>\r\n        {folders.map((folder) => (\r\n          <li key={folder.id}>\r\n            <button onClick={() => onSelectFolder(folder.id)}>{folder.name}</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={newFolderName}\r\n          onChange={(e) => setNewFolderName(e.target.value)}\r\n          placeholder=\"New folder name\"\r\n        />\r\n        <button onClick={handleCreateFolder}>Create Folder</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport defaultÂ FolderPanel;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,UAAU,EAAEC,YAAY,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,WAAWA,CAAC;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACdE,UAAU,CAAC,CAAC,CAACW,IAAI,CAAEC,IAAI,IAAKJ,UAAU,CAACI,IAAI,CAAC,CAAC;EAC/C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI,CAACJ,aAAa,CAACK,IAAI,CAAC,CAAC,EAAE,OAAOC,KAAK,CAAC,yBAAyB,CAAC;IAClE,MAAMC,MAAM,GAAG,MAAMf,YAAY,CAACQ,aAAa,CAAC;IAChDD,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAES,MAAM,CAAC,CAAC;IAChCN,gBAAgB,CAAC,EAAE,CAAC;EACtB,CAAC;EAED,oBACEP,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBlB,OAAA;MAAAc,QAAA,EACGV,OAAO,CAACe,GAAG,CAAEN,MAAM,iBAClBb,OAAA;QAAAc,QAAA,eACEd,OAAA;UAAQoB,OAAO,EAAEA,CAAA,KAAMlB,cAAc,CAACW,MAAM,CAACQ,EAAE,CAAE;UAAAP,QAAA,EAAED,MAAM,CAACS;QAAI;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS;MAAC,GADjEL,MAAM,CAACQ,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEd,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLlB,OAAA;MAAAc,QAAA,gBACEd,OAAA;QACEuB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAElB,aAAc;QACrBmB,QAAQ,EAAGC,CAAC,IAAKnB,gBAAgB,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAClDI,WAAW,EAAC;MAAiB;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eACFlB,OAAA;QAAQoB,OAAO,EAAEV,kBAAmB;QAAAI,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACf,EAAA,CApCQF,WAAW;AAAA4B,EAAA,GAAX5B,WAAW;AAsCpB,eAAeA,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}