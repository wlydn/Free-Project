{"ast":null,"code":"var _jsxFileName = \"D:\\\\WE\\\\frontend\\\\src\\\\components\\\\FolderPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getFolders } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FolderPanel({\n  onSelectFolder\n}) {\n  _s();\n  const [folders, setFolders] = useState([]);\n  useEffect(() => {\n    getFolders().then(data => setFolders(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Folders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: folders.map(folder => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onSelectFolder(folder.id),\n          children: folder.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this)\n      }, folder.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(FolderPanel, \"y29ylgxvgT546+YZhmR9TjVNO2Q=\");\n_c = FolderPanel;\nexport default FolderPanel;\nvar _c;\n$RefreshReg$(_c, \"FolderPanel\");","map":{"version":3,"names":["React","useEffect","useState","getFolders","jsxDEV","_jsxDEV","FolderPanel","onSelectFolder","_s","folders","setFolders","then","data","children","fileName","_jsxFileName","lineNumber","columnNumber","map","folder","onClick","id","name","_c","$RefreshReg$"],"sources":["D:/WE/frontend/src/components/FolderPanel.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getFolders } from '../services/api';\r\n\r\nfunction FolderPanel({ onSelectFolder }) {\r\n  const [folders, setFolders] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getFolders().then((data) => setFolders(data));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h3>Folders</h3>\r\n      <ul>\r\n        {folders.map((folder) => (\r\n          <li key={folder.id}>\r\n            <button onClick={() => onSelectFolder(folder.id)}>{folder.name}</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport defaultÂ FolderPanel;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,WAAWA,CAAC;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACdE,UAAU,CAAC,CAAC,CAACQ,IAAI,CAAEC,IAAI,IAAKF,UAAU,CAACE,IAAI,CAAC,CAAC;EAC/C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAAQ,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBZ,OAAA;MAAAQ,QAAA,EACGJ,OAAO,CAACS,GAAG,CAAEC,MAAM,iBAClBd,OAAA;QAAAQ,QAAA,eACER,OAAA;UAAQe,OAAO,EAAEA,CAAA,KAAMb,cAAc,CAACY,MAAM,CAACE,EAAE,CAAE;UAAAR,QAAA,EAAEM,MAAM,CAACG;QAAI;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS;MAAC,GADjEE,MAAM,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEd,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACT,EAAA,CAnBQF,WAAW;AAAAiB,EAAA,GAAXjB,WAAW;AAqBpB,eAAeA,WAAW;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}