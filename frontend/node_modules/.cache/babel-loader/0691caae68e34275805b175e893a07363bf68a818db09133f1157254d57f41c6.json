{"ast":null,"code":"var _jsxFileName = \"D:\\\\WE\\\\frontend\\\\src\\\\components\\\\FolderPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getFolders, createFolder } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FolderPanel({\n  onSelectFolder\n}) {\n  _s();\n  const [folders, setFolders] = useState([]);\n  const [newFolderName, setNewFolderName] = useState(\"\");\n  useEffect(() => {\n    getFolders().then(data => setFolders(data));\n  }, []);\n  const handleCreateFolder = async () => {\n    if (!newFolderName.trim()) {\n      alert(\"Folder name is required\");\n      return;\n    }\n    const folder = await createFolder(newFolderName);\n    setFolders([...folders, folder]);\n    setNewFolderName(\"\");\n  };\n\n  // Fungsi untuk merender folder dengan dropdown jika ada subfolder\n  const renderFolderTree = (folders, parentId = null) => {\n    const childFolders = folders.filter(folder => folder.parent_id === parentId);\n    if (childFolders.length === 0) {\n      return null;\n    }\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: childFolders.map(folder => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onSelectFolder(folder.id),\n          children: folder.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), renderFolderTree(folders, folder.id)]\n      }, folder.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Folders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), renderFolderTree(folders), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newFolderName,\n        onChange: e => setNewFolderName(e.target.value),\n        placeholder: \"New folder name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateFolder,\n        children: \"Create Folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(FolderPanel, \"rDSWFP4QbLAjQ/JkZjuVbr2sCdw=\");\n_c = FolderPanel;\nexport default FolderPanel;\nvar _c;\n$RefreshReg$(_c, \"FolderPanel\");","map":{"version":3,"names":["React","useEffect","useState","getFolders","createFolder","jsxDEV","_jsxDEV","FolderPanel","onSelectFolder","_s","folders","setFolders","newFolderName","setNewFolderName","then","data","handleCreateFolder","trim","alert","folder","renderFolderTree","parentId","childFolders","filter","parent_id","length","children","map","onClick","id","name","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["D:/WE/frontend/src/components/FolderPanel.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getFolders, createFolder } from \"../services/api\";\r\n\r\nfunction FolderPanel({ onSelectFolder }) {\r\n  const [folders, setFolders] = useState([]);\r\n  const [newFolderName, setNewFolderName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getFolders().then((data) => setFolders(data));\r\n  }, []);\r\n\r\n  const handleCreateFolder = async () => {\r\n    if (!newFolderName.trim()) {\r\n      alert(\"Folder name is required\");\r\n      return;\r\n    }\r\n    const folder = await createFolder(newFolderName);\r\n    setFolders([...folders, folder]);\r\n    setNewFolderName(\"\");\r\n  };\r\n\r\n  // Fungsi untuk merender folder dengan dropdown jika ada subfolder\r\n  const renderFolderTree = (folders, parentId = null) => {\r\n    const childFolders = folders.filter((folder) => folder.parent_id === parentId);\r\n\r\n    if (childFolders.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <ul>\r\n        {childFolders.map((folder) => (\r\n          <li key={folder.id}>\r\n            <button onClick={() => onSelectFolder(folder.id)}>{folder.name}</button>\r\n            {/* Rekursi untuk merender child folders */}\r\n            {renderFolderTree(folders, folder.id)}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Folders</h3>\r\n      {/* Memulai rendering folder tree dari root (parent_id = null) */}\r\n      {renderFolderTree(folders)}\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={newFolderName}\r\n          onChange={(e) => setNewFolderName(e.target.value)}\r\n          placeholder=\"New folder name\"\r\n        />\r\n        <button onClick={handleCreateFolder}>Create Folder</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport defaultÂ FolderPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}